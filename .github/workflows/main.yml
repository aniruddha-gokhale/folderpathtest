# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    # Runs a single command using the runners shell
    - name: Run a one-line script
      run: mkdir -p ../../_build
    
    - name: Set Ho
      env:
        HO: ${{ secrets.H2_NAME }}
      run: |
        echo "$HO" | base64 --decode > ho.txt
        echo $(python -c "import json;print json.loads(open('ho.txt', 'r').read())['host_name']")
        echo ::set-env name=HOST::$(python -c "import json;print json.loads(open('ho.txt', 'r').read())['host_name']")

    # Runs a set of commands using the runners shell
    - name: Run a multi-line script
      env:
        AUTH: ${{ secrets.SEC4_KEY }}
      run: |
        echo "$AUTH" | base64 --decode > testsec.pem
        chmod 600 testsec.pem
        mkdir ~/.ssh
        echo "$AUTH" | base64 --decode > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh -o StrictHostKeyChecking=no -i testsec.pem ubuntu@${{ env.HOST }} "cd ci-cd-Builds ; ls -la"
        echo clear everything.
        rm -rf testsec.pem
        rm -rf ho.txt
        rm -rf ~/.ssh/id_rsa
